{"version":3,"sources":["../src/auth.js"],"names":[],"mappings":";;;;;;;;;;;;;QASgB,Y,GAAA,Y;QA0HA,e,GAAA,e;;AAnIhB;;;;AACA;;AACA;;;;AACA;;AACA;;;;AAEA,IAAM,cAAc,aAApB;;;AAGO,SAAS,YAAT,CAAsB,IAAtB,EAA4B;AAAA;;AACjC,MAAM,kBAAkB,SAAlB,eAAkB,UAAW;AACjC,QAAI,QAAQ,cAAR,CAAuB,IAAvB,CAAJ,EAAkC;AAChC,aAAO,QAAQ,IAAR,CAAP;AACD,KAFD,MAEO;AACL,YAAM,IAAI,KAAJ,8BAAqC,IAArC,CAAN;AACD;AACF,GAND;AAOA,MAAI,CAAC,KAAK,YAAV,EAAwB;AACtB,WAAO,qBAAa,KAAK,YAAlB,oBACJ,EADI,CACD,uBAAe;AACjB,YAAK,YAAL,GAAoB,WAApB;AACD,KAHI,EAGF,GAHE,CAGE,eAHF,CAAP;AAID,GALD,MAKO;AACL,WAAO,uBAAW,EAAX,CAAc,KAAK,YAAnB,EAAiC,GAAjC,CAAqC,eAArC,CAAP;AACD;AACF;;;;IAGY,W,WAAA,W;AACX,yBAAc;AAAA;AAAE,SAAK,QAAL,GAAgB,IAAI,GAAJ,EAAhB;AAA2B;;wBAC3C,O,oBAAQ,C,EAAG,C,EAAG;AAAE,WAAO,KAAK,QAAL,CAAc,GAAd,CAAkB,CAAlB,EAAqB,CAArB,CAAP;AAAgC,G;;wBAChD,O,oBAAQ,C,EAAG;AAAE,WAAO,KAAK,QAAL,CAAc,GAAd,CAAkB,CAAlB,CAAP;AAA6B,G;;wBAC1C,U,uBAAW,C,EAAG;AAAE,WAAO,KAAK,QAAL,CAAc,MAAd,CAAqB,CAArB,CAAP;AAAgC,G;;;;;AAGlD,SAAS,UAAT,GAAyC;AAAA,MAArB,YAAqB,yDAAN,IAAM;;AACvC,MAAI,gBAAJ;AACA,MAAI;AACF,QAAI,CAAC,YAAD,IACA,QAAO,MAAP,uDAAO,MAAP,OAAkB,QADlB,IAEA,OAAO,YAAP,KAAwB,SAF5B,EAEuC;AACrC,gBAAU,IAAI,WAAJ,EAAV;AACD,KAJD,MAIO;;;AAGL,aAAO,YAAP,CAAoB,OAApB,CAA4B,QAA5B,EAAsC,CAAtC;AACA,aAAO,YAAP,CAAoB,UAApB,CAA+B,QAA/B;AACA,gBAAU,OAAO,YAAjB;AACD;AACF,GAZD,CAYE,OAAO,KAAP,EAAc;AACd,QAAI,OAAO,cAAP,KAA0B,SAA9B,EAAyC;AACvC,gBAAU,IAAI,WAAJ,EAAV;AACD,KAFD,MAEO;AACL,gBAAU,OAAO,cAAjB;AACD;AACF;AACD,SAAO,OAAP;AACD;;IAEY,Y,WAAA,Y;AACX,0BAEuC;AAAA,qEAAJ,EAAI;;AAAA,6BAFzB,QAEyB;AAAA,QAFzB,QAEyB,iCAFd,OAEc;AAAA,4BADzB,OACyB;AAAA,QADzB,OACyB,gCADf,WAAW,SAAS,YAApB,CACe;AAAA,yBAAzB,IAAyB;AAAA,QAAzB,IAAyB,6BAAlB,SAAkB;AAAA;;AACrC,SAAK,QAAL,GAAgB,OAAhB;AACA,SAAK,KAAL,GAAa,IAAb;AACA,QAAI,OAAO,QAAP,KAAoB,QAAxB,EAAkC;AAChC,WAAK,SAAL,GAAiB,QAAjB;AACD,KAFD,MAEO;AACL,WAAK,SAAL,GAAiB,OAAjB;AACA,WAAK,GAAL,CAAS,SAAS,KAAlB;AACD;AACF;;yBAED,Q,uBAAW;AACT,QAAM,MAAM,KAAK,QAAL,CAAc,OAAd,CAAsB,WAAtB,CAAZ;AACA,QAAI,OAAO,IAAX,EAAiB;AACf,aAAO,EAAP;AACD,KAFD,MAEO;AACL,aAAO,KAAK,KAAL,CAAW,GAAX,CAAP;AACD;AACF,G;;yBAED,Q,qBAAS,I,EAAM;AACb,SAAK,QAAL,CAAc,OAAd,CAAsB,WAAtB,EAAmC,KAAK,SAAL,CAAe,IAAf,CAAnC;AACD,G;;yBAED,G,gBAAI,G,EAAK;AACP,QAAM,UAAU,KAAK,QAAL,EAAhB;AACA,YAAQ,KAAK,KAAb,IAAsB,GAAtB;AACA,SAAK,QAAL,CAAc,OAAd;AACD,G;;yBAED,G,kBAAM;AACJ,WAAO,KAAK,QAAL,GAAgB,KAAK,KAArB,CAAP;AACD,G;;yBAED,M,qBAAS;AACP,QAAM,UAAU,KAAK,QAAL,EAAhB;AACA,WAAO,QAAQ,KAAK,KAAb,CAAP;AACA,SAAK,QAAL,CAAc,OAAd;AACD,G;;yBAED,sB,qCAAyB;AACvB,QAAM,SAAS,OAAO,MAAP,KAAkB,WAAlB,GAAgC,0BAAW,OAAO,QAAP,CAAgB,MAA3B,CAAhC,GAAqE,EAApF;;AAEA,QAAI,OAAO,aAAP,IAAwB,IAA5B,EAAkC;AAChC,WAAK,GAAL,CAAS,OAAO,aAAhB;AACD;AACF,G;;;;;yBAGD,S,wBAAY;;;AAGV,QAAM,QAAQ,KAAK,GAAL,EAAd;AACA,QAAI,SAAS,IAAb,EAAmB;AACjB,aAAO,EAAE,QAAQ,OAAV,EAAmB,YAAnB,EAAP;AACD,KAFD,MAEO,IAAI,KAAK,SAAL,KAAmB,OAAvB,EAAgC;AACrC,YAAM,IAAI,KAAJ,CACJ,kEADI,CAAN;AAED,KAHM,MAGA;AACL,aAAO,EAAE,QAAQ,KAAK,SAAf,EAAP;AACD;AACF,G;;;;;yBAGD,Y,2BAAe;AACb,WAAO,QAAQ,KAAK,GAAL,EAAR,CAAP;AACD,G;;;;;AAGI,SAAS,eAAT,GAA2B;AAChC,SAAO,aAAa,UAAb,CAAwB,WAAxB,CAAP;AACD","file":"auth.js","sourcesContent":["import queryParse from './util/query-parse'\nimport { Observable } from 'rxjs/Observable'\nimport fetchJSON from './util/fetch.js'\nimport 'rxjs/add/operator/do'\nimport 'rxjs/add/operator/map'\n\nconst HORIZON_JWT = 'horizon-jwt'\n\n/** @this Horizon **/\nexport function authEndpoint(name) {\n  const endpointForName = methods => {\n    if (methods.hasOwnProperty(name)) {\n      return methods[name]\n    } else {\n      throw new Error(`Unconfigured auth type: ${name}`)\n    }\n  }\n  if (!this._authMethods) {\n    return fetchJSON(`${this._horizonPath}/auth_methods`)\n      .do(authMethods => {\n        this._authMethods = authMethods\n      }).map(endpointForName)\n  } else {\n    return Observable.of(this._authMethods).map(endpointForName)\n  }\n}\n\n// Simple shim to make a Map look like local/session storage\nexport class FakeStorage {\n  constructor() { this._storage = new Map() }\n  setItem(a, b) { return this._storage.set(a, b) }\n  getItem(a) { return this._storage.get(a) }\n  removeItem(a) { return this._storage.delete(a) }\n}\n\nfunction getStorage(storeLocally = true) {\n  let storage\n  try {\n    if (!storeLocally ||\n        typeof window !== 'object' ||\n        window.localStorage === undefined) {\n      storage = new FakeStorage()\n    } else {\n      // Mobile safari in private browsing has a localStorage, but it\n      // has a size limit of 0\n      window.localStorage.setItem('$$fake', 1)\n      window.localStorage.removeItem('$$fake')\n      storage = window.localStorage\n    }\n  } catch (error) {\n    if (window.sessionStorage === undefined) {\n      storage = new FakeStorage()\n    } else {\n      storage = window.sessionStorage\n    }\n  }\n  return storage\n}\n\nexport class TokenStorage {\n  constructor({ authType = 'token',\n                storage = getStorage(authType.storeLocally),\n                path = 'horizon' } = {}) {\n    this._storage = storage\n    this._path = path\n    if (typeof authType === 'string') {\n      this._authType = authType\n    } else {\n      this._authType = 'token'\n      this.set(authType.token)\n    }\n  }\n\n  _getHash() {\n    const val = this._storage.getItem(HORIZON_JWT)\n    if (val == null) {\n      return {}\n    } else {\n      return JSON.parse(val)\n    }\n  }\n\n  _setHash(hash) {\n    this._storage.setItem(HORIZON_JWT, JSON.stringify(hash))\n  }\n\n  set(jwt) {\n    const current = this._getHash()\n    current[this._path] = jwt\n    this._setHash(current)\n  }\n\n  get() {\n    return this._getHash()[this._path]\n  }\n\n  remove() {\n    const current = this._getHash()\n    delete current[this._path]\n    this._setHash(current)\n  }\n\n  setAuthFromQueryParams() {\n    const parsed = typeof window !== 'undefined' ? queryParse(window.location.search) : {}\n\n    if (parsed.horizon_token != null) {\n      this.set(parsed.horizon_token)\n    }\n  }\n\n  // Handshake types are implemented here\n  handshake() {\n    // If we have a token, we should send it rather than requesting a\n    // new one\n    const token = this.get()\n    if (token != null) {\n      return { method: 'token', token }\n    } else if (this._authType === 'token') {\n      throw new Error(\n        'Attempting to authenticate with a token, but no token is present')\n    } else {\n      return { method: this._authType }\n    }\n  }\n\n  // Whether there is an auth token for the provided authType\n  hasAuthToken() {\n    return Boolean(this.get())\n  }\n}\n\nexport function clearAuthTokens() {\n  return getStorage().removeItem(HORIZON_JWT)\n}\n"]}